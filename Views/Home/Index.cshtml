@model IEnumerable<Advertisment>
@inject AdvertismentPlatform.Services.ICartype _carTypeContainer
@using X.PagedList.Mvc.Core
@using X.PagedList
@using Microsoft.AspNetCore.Http

@{
    ViewBag.Title = "Home Page";
    var ok = false;
    var queryString = Context.Request.Query;
    var selectedItemType = 0;

    var carTypes = _carTypeContainer.GetTypes();
}
<br />
<br />

<div class="row ">

    @*Left Side*@
    <div class="col-3">
        <div class="card shadow rounded">

            <div class="card-header bg-dark text-white">
                <div class="text-center">
                    <b>Filter by</b>
                </div>
            </div>
            <div class="card-body p-0 pt-2 pb-2 mt-1 mb-1 text-center">

                <form method="get" autocomplete="off" action="@Url.Action("Index", "Home")">
                    <div class="form-group">

                        <div class="types shadow">
                            <div class="Categories row text-center">
                                <label for="carCheck" class="col"><i class="fas fa-car-side fa-2x"></i></label>

                                <label for="bikeCheck" class="col"><i class="fas fa-motorcycle fa-2x"></i></label>
                            </div>
                            <div class="Categories row text-center">
                                <div class="col">
                                    @{ if (queryString["itemType"] == "1") { ok = true; selectedItemType = 1; } else ok = false; }
                                    <input id="carCheck" onclick="enableItemFilter('radioCar')" type="radio" name="itemType" value="1" checked="@ok" />
                                </div>
                                <div class="col">
                                    @{ if (queryString["itemType"] == "2") { ok = true; selectedItemType = 2; } else ok = false; }
                                    <input id="bikeCheck" onclick="enableItemFilter('radioBike')" type="radio" name="itemType" value="2" checked="@ok" />
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="form-group pl-2 pr-2 pt-2 pb-3 text-left shadow ">
                        @*Price*@
                        @{
                            var fromQueryPrice = Context.Request.Query["fromPrice"].ToString();
                            var toQueryPrice = Context.Request.Query["toPrice"].ToString();
                            if (fromQueryPrice.Length > 0 && toQueryPrice.Length > 0)
                            {
                                if (Int32.Parse(fromQueryPrice) > Int32.Parse(toQueryPrice))
                                {
                                    var x = fromQueryPrice;
                                    fromQueryPrice = toQueryPrice;
                                    toQueryPrice = x;
                                }
                            }

                        }
                        <div class="row ">
                            <div class="col">
                                <b>Price(€):</b>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col">
                                <input class="form-control" name="fromPrice" value="@fromQueryPrice" placeholder="from" type="number" />
                            </div>
                            <div class="col">
                                <input class="form-control" name="toPrice" value="@toQueryPrice" placeholder="to" type="number" />
                            </div>
                        </div>

                        @*Year*@
                        <div class="row ">
                            <div class="col">
                                <b>Year:</b>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col">
                                @{ var fromQueryYear = Context.Request.Query["fromYear"].ToString();
                                    var toQueryYear = Context.Request.Query["toYear"].ToString();
                                    var year = DateTime.UtcNow.Year;
                                    var FromYear = DateTime.UtcNow.Year;
                                    var ToYear = DateTime.UtcNow.Year;
                                    if (!(fromQueryYear.Length == 0))
                                    {
                                        FromYear = int.Parse(fromQueryYear);
                                    }
                                    if (!(toQueryYear.Length == 0))
                                    {
                                        ToYear = int.Parse(toQueryYear);
                                    }

                                    if (FromYear > ToYear)
                                    {
                                        var x = ToYear;
                                        ToYear = FromYear;
                                        FromYear = x;
                                    }
                                }
                                <select name="fromYear" class="custom-select">
                                    <option selected value="1900">1900</option>
                                    @for (int i = year; i > 1980; i--)
                                    {
                                        <option value="@i">@i</option>

                                    }
                                    @for (int i = 1980; i >= 1901; i = i - 5)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                            </div>
                            <div class="col">
                                <select name="toYear" class="custom-select">
                                    <option selected value="@ToYear">@ToYear</option>
                                    @for (int i = year; i > 1980; i--)
                                    {
                                        @if (i != ToYear)
                                        {
                                            <option value="@i">@i</option>
                                        }
                                    }
                                    @for (int i = 1980; i >= 1900; i = i - 5)
                                    {
                                        @if (i != ToYear)
                                        {
                                            <option value="@i">@i</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                        @*Mileage*@
                        @{
                            var fromQueryMileage = Context.Request.Query["fromMileage"].ToString();
                            var toQueryMileage = Context.Request.Query["toMileage"].ToString();
                            if (fromQueryMileage.Length > 0 && toQueryMileage.Length > 0)
                            {
                                if (Int32.Parse(fromQueryMileage) > Int32.Parse(toQueryMileage))
                                {
                                    var x2 = fromQueryMileage;
                                    fromQueryMileage = toQueryMileage;
                                    toQueryMileage = x2;
                                }
                            }

                        }
                        <div class="row ">
                            <div class="col">
                                <b>Mileage:</b>
                            </div>
                        </div>
                        <div class="row mb-1">
                            <div class="col">
                                <input class="form-control" name="fromMileage" value="@fromQueryMileage" placeholder="from" type="number" />
                            </div>
                            <div class="col">
                                <input class="form-control" name="toMileage" value="@toQueryMileage" placeholder="to" type="number" />
                            </div>
                        </div>

                    </div>

                    <div id="radioCar" class="form-group pl-2 pr-2 pt-2 pb-3 text-center shadow hideable enabled" style="display : none">
                        <a id="selectedCategories" onclick="toggleInsideFitler('carInsideFilter')" class="dropdown-toggle" style="color:black"
                           aria-expanded="false">
                            <b>Car category</b>
                        </a>

                        <div id="carInsideFilter" style="display : none">
                            <div class="form-check text-left">

                                @foreach (var cartype in carTypes)
                                {
                                    <div class="row">
                                        <div class="col">
                                            <input class="form-check-input toBeUnchecked radioCar" name="@cartype.type" value="@cartype.type" checked="checked" type="checkbox" style="width:30px; height:30px;" id="CheckBox_@cartype.type">
                                            <label class="form-check-label" for="CheckBox_@cartype.type">
                                                &nbsp;&nbsp;<img src="@cartype.svgPath" style="width: 40px;" asp-append-version="true" />&nbsp;&nbsp;@cartype.type
                                            </label>
                                        </div>
                                    </div>
                                }
                                
                            </div>
                        </div>

                    </div>

                    <input type="submit" class="btn btn-primary" value="Search" 
                           ./>
                </form>
                <p>@{var rez = ((IPagedList)(Model)).TotalItemCount;}@rez results</p>

            </div>

        </div>
    </div>

    @*Right Side*@
    <div class="col ">

        @*NavBar and Create button*@
        <div class="row">
            <div class="col">
                <form method="get" autocomplete="off" action="@Url.Action("Index", "Home")">
                    <div class="input-group shadow rounded">
                        <div class="input-group-append">
                            <button class="btn btn-primary" type="submit">
                                <i class="fa fa-search" style="color: white;"></i>
                            </button>
                        </div>

                        <input id="query" name="search" type="text" class="form-control" placeholder="Search">
                    </div>
                </form>
            </div>
            <div class="col-auto text-right">
                <a asp-action="CreateAdvertise" asp-controller="Advertisment" class="btn btn-primary"><i class="fas fa-bullhorn"></i>&nbsp;&nbsp;Create Advertise</a>
            </div>
        </div>
        <br />

        @*Main Card*@
        @if (!Model.Any())
        {
            <h2>There are no active ads currently.</h2>
            <h5>You can create some</h5>
        }
        else
        {
            <div class="row">

                <div class="col">
                    <div class="card shadow rounded">

                        <div class="card-header bg-dark text-light mb-1">
                            <div class="row">
                                <div class="col-2"></div>
                                <div class="col-3 "><b>Item Details</b></div>
                                <div class="col-2 text-center"><b>Price</b></div>
                                <div class="col text-center"><b>Post Time</b></div>

                            </div>
                        </div>

                        <div class="card-body">
                            @for (int i = 0; i < Model.Count() - 1; i++)
                            {
                                var currentModel = Model.ElementAt(i);
                                <partial name="~/Views/Advertisment/AdvertismentView.cshtml" for="@currentModel" />
                                <hr />
                            }
                            @{
                                var lastModel = Model.Last();
                                <partial name="~/Views/Advertisment/AdvertismentView.cshtml" for="@lastModel" />
                            }
                            <br />

                        </div>

                        <div class="card-footer">
                            @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
                       {
                           itemType = selectedItemType,
                           fromPrice = queryString["fromPrice"],
                           toPrice = queryString["toPrice"],
                           fromYear = queryString["fromYear"],
                           toYear = queryString["toYear"],
                           fromMileage = queryString["fromMileage"],
                           toMileage = queryString["toMileage"],
                           SUV = queryString["SUV"],
                           Coupe = queryString["Coupe"],
                           Hatchback = queryString["Hatchback"],
                           Saloon = queryString["Saloon"],
                           Pickup = queryString["Pickup"],
                           page = page
                       }),
                              new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
                              {
                                  DisplayItemSliceAndTotal = false,
                                  ContainerDivClasses = new[] { "navigation" },
                                  LiElementClasses = new[] { "page-item" },
                                  PageClasses = new[] { "page-link" }

                              })
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br />


@section Scripts {
    <script>
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
            $('ul.pagination > li.active > span').addClass('bg-dark text-white');

            if ($('#carCheck').is(':checked')) {
                enableItemFilter('radioCar');
            }
                
        });
    </script>
    <script>
        function enableItemFilter(idEnable) {
            $('#' + idEnable).slideDown();
            $('.hideable').not('#' + idEnable).slideUp();
            $('.' + 'toBeUnchecked').not('.' + idEnable).prop("checked", false);            
        }

        

        function toggleInsideFitler(idEnable) {
            if ($('#' + idEnable).hasClass('enabled')) {
                $('#' + idEnable).slideUp();
                $('#' + idEnable).removeClass('enabled');
            } else {
                $('#' + idEnable).addClass('enabled');
                $('#' + idEnable).slideDown();
            }

        }
    </script>

    <script>
        function ViewAd(id) {
            window.location.href = '/Home/ViewAdvertisment/' + id;
        }
    </script>
    <script src="~/js/CustomScript.js"></script>
}